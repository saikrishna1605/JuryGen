# Cloud Run service configuration for AI Legal Companion Backend
# Optimized for production deployment with auto-scaling and security

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: ai-legal-companion-backend
  namespace: default
  labels:
    app: ai-legal-companion
    component: backend
    environment: production
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
    run.googleapis.com/cpu-throttling: "false"
spec:
  template:
    metadata:
      labels:
        app: ai-legal-companion
        component: backend
        version: v1
      annotations:
        # Scaling configuration
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "100"
        autoscaling.knative.dev/target: "80"
        
        # Resource allocation
        run.googleapis.com/memory: "2Gi"
        run.googleapis.com/cpu: "2"
        
        # Networking
        run.googleapis.com/vpc-access-connector: "ai-legal-companion-connector"
        run.googleapis.com/vpc-access-egress: "private-ranges-only"
        
        # Security
        run.googleapis.com/execution-environment: "gen2"
        run.googleapis.com/sandbox: "gvisor"
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      serviceAccountName: ai-legal-companion-backend-sa
      
      containers:
      - name: backend
        image: gcr.io/PROJECT_ID/ai-legal-companion-backend:latest
        
        ports:
        - name: http1
          containerPort: 8000
          protocol: TCP
        
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        - name: VERTEX_AI_LOCATION
          value: "us-central1"
        - name: STORAGE_BUCKET
          value: "ai-legal-companion-storage"
        - name: FIRESTORE_DATABASE
          value: "default"
        - name: CORS_ORIGINS
          value: "https://ai-legal-companion.com"
        - name: LOG_LEVEL
          value: "INFO"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: secret-key
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: redis-url
        
        resources:
          limits:
            memory: "2Gi"
            cpu: "2000m"
          requests:
            memory: "1Gi"
            cpu: "1000m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Startup probe for slow initialization
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

  traffic:
  - percent: 100
    latestRevision: true

---
# Horizontal Pod Autoscaler for additional scaling control
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-legal-companion-backend-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: serving.knative.dev/v1
    kind: Service
    name: ai-legal-companion-backend
  minReplicas: 1
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60